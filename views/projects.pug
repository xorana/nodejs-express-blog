include mixins/mixins.pug

doctype html
html
    head
        title Projects
        link(rel='stylesheet', href='/static/css/projects.css')
        link(rel='stylesheet', href='/static/fontawesome/css/all.css')
        link(rel='icon', href='/static/favicon.ico')
        meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1')
    body
        +nav
        .content
            if projects
                each project in projects
                    .project
                        .project-image(style=`background-image: url(/static/${project.image})`)
                            .blur
                        .project-content
                            h3= project.title
                            p= project.description
                            if project.skills.length > 0
                                .project-skills
                                    each skill in project.skills
                                        span= skill
                            .project-links
                                if project.demoLink
                                    a(href=`${project.demoLink}`)
                                        i.fa.fa-external-link-alt
                                        |  Live demo
                                a(href=`${project.sourceLink}`)
                                    i.fab.fa-github
                                    |  View source
            .project
                .project-image(style='background-image: url(/static/Untitled.png)')
                    .blur
                .project-content
                    h3 jacobsalway.com
                    p This website! A personal website built with Node.js, Typescript and Express with Pug for page templates, SASS for styling and the website contents in MongoDB. Hosted on EC2 with a CI/CD pipeline implemented using Github Actions and CodeDeploy.
                    .project-skills
                        span Javascript
                        span Typescript
                        span HTML
                        span CSS
                        span MongoDB
                        span EC2
                        span CodeDeploy
                    .project-links
                        a
                            i.fa.fa-external-link-alt
                            |  Live demo
                        a
                            i.fab.fa-github
                            |  View source
            .project
                .project-image(style='background-image: url(/static/dashboard.png)')
                    .blur
                .project-content
                    h3 Implied interest rate pipeline and dashboard
                    p A data pipeline orchestrated using Lambda that extracts implied interest rate data from ASX PDFs using OCR and stores the result in S3. Also created a Tableau dashboard to visualise the data using an Athena connector.
                    .project-skills
                        span Python
                        span Lambda
                        span S3
                        span Athena
                        span Tableau
                    .project-links
                        a
                            i.fa.fa-external-link-alt
                            |  Live demo
                        a
                            i.fab.fa-github
                            |  View source
            .project
                .project-image(style='background-image: url(/static/game.png)')
                    .blur
                .project-content
                    h3 Zeloxa - the game
                    p A simple 2D platformer-ish game I made in high school using pygame. The objective is just to reach the other side of the level while avoiding the enemies. There are three levels defined in a text format, allowing custom platform and enemy placement.
                    .project-skills
                        span Python
                    .project-links
                        a
                            i.fab.fa-github
                            |  View source